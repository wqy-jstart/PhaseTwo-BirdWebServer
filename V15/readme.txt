浏览器传递中文问题
表单使用GET形式提交时，如果参数含有中文则不符合HTTP协议要求
原因:
表单数据提交时会被包含在请求的抽象路径中，而HTTP协议要求请求的请求行和消息头符合的字符集必须
为ISO8859-1.这是一个欧洲字符集，里面不支持中文。

解决:
思路:用ISO8859-1支持的字符去表达其不支持的字符。
例如:传递汉字："范"
支持中文最常见的字符集为:UTF-8
于是浏览器可以这样做:
先将"范"用UTF-8编码转换为2进制:11101000 10001100 10000011(3个字节)
2进制1和0可以用字符'1'和'0'描述。而ISO8859-1支持英文，数字，符号。既然支持数字类型的
字符，那么我们就可以用数字类型的字符'1','0'传递UTF-8编码的汉字
/regUser?username=范&password=.....
/regUser?username=111010001000110010000011&password=.....

'范'->'1''1''1''0''1''0''0''0'.....

问题虽然解决，但是新的问题出现了:太长
解决办法:将2进制用16进制形式表达

2进制             10进制                16进制
0000                0                   0
0001                1                   1
0010                2                   2
0011                3                   3
0100                4                   4
0101                5                   5
0110                6                   6
0111                7                   7
1000                8                   8
1001                9                   9
1010                10                  A
1011                11                  B
1100                12                  C
1101                13                  D
1110                14                  E
1111                15                  F

"范"的2进制:1110 1000 1000 1100 1000 0011
    16进制: E     8    8    C    8    3

/regUser?usenrame=111010001000110010000011&password=...
/regUser?usenrame=E88C83&password=...

长度问题解决了，新的问题:如何与实际的英文数字组合区分呢?
例如:有一个人注册时，名字就想叫"E88C83"
解决办法:URL格式要求，如果字母与数字的组合表达的时16进制内容，则要求每2位16进制前必须添加"%"
因此，若传递的是：
/regUser?usenrame=E88C83&password=...
说明此人就叫“E88C83”
若传递的是:
/regUser?usenrame=%E8%8C%83&password=...
则说明这是16进制的内容，因此要将E8 8C 83翻译成2进制11101000 10001100 10000011
然后再按照UTF-8编码还原为字符'范'


